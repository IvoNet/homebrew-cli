#!/usr/bin/env bash


if [ -z $1 ]; then
    echo "Please provide a project name..."
    exit 1
fi
PROJECT="$1"
PROJECT_NAME="docker-$PROJECT"

mkdir -p ${PROJECT_NAME}/root/etc/cont-init.d
mkdir -p ${PROJECT_NAME}/root/etc/cont-finish.d
mkdir -p ${PROJECT_NAME}/root/etc/services.d/a-service

cat <<'EOT' > ${PROJECT_NAME}/root/startapp.sh
#!/usr/bin/env bash
# to make sure the application restarts when closed in the browser
while true;
do
  # Your application startup here
  echo TODO
done
EOT

cat <<'EOT' > ${PROJECT_NAME}/root/etc/cont-init.d/100-init.sh
#!/usr/bin/with-contenv bash
# Add your commands here
EOT

cat <<'EOT' > ${PROJECT_NAME}/root/etc/services.d/a-service/run
#!/usr/bin/with-contenv bash
exec 2>&1
exec #your service startup here
EOT

cat <<'EOT' > ${PROJECT_NAME}/Dockerfile
FROM ivonet/x11webui:latest
LABEL maintainer="Ivo Woltring - @ivonet"

RUN apt-get update \
 && apt-get install --no-install-recommends -y TODO\
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ARG APP=PROJECT_NAAM
ARG USR=user
ARG PWD=secret

ENV APPNAME=$APP      \
    USERNAME=$USR     \
    GPASSWORD=$PWD

COPY root/ /
EOT

cat <<'EOT' > ${PROJECT_NAME}/README.md
# PROJECT_NAAM

Web desktop docker image for: PROJECT_NAAM

# Usage

See `run.sh` and `PROJECT_NAAM.sh` for examples on how to run the application.

# Exposed Ports

| Port number| Description                                                       |
| :----------| :-----------------------------------------------------------------|
| `32000`    | The application runs here                                         |
|            | |

# Volumes

| Volume path          | Description                                             |
| :--------------------| :-------------------------------------------------------|
| | |
| | |

# Environment variables

| Environment | Description                                        |  Default   |
| :-----------| :--------------------------------------------------|:-----------|
| | | |
| | | |

# Base image configurable settings

Lots of things can be configured through the base image.

See repo [docker-x11webui](https://github.com/IvoNet/docker-x11webui/blob/master/README.md)
for documentation on the base image.

# For developers

## Build

See `build.sh` for build instructions

---
# License

    Copyright 2020 (c) Ivo Woltring

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

EOT

cat <<'EOT' > ${PROJECT_NAME}/${PROJECT}.sh
#!/usr/bin/env bash
NAME=PROJECT_NAAM
PORT=32000
WAIT=3

if [ ! "$(docker ps -q -f name=$NAME)" ]; then

    [[ -z "$(brew ls --versions pulseaudio)" ]] && brew install pulseaudio
    killall pulseaudio 2>/dev/null
    pulseaudio --load=module-native-protocol-tcp --exit-idle-time=-1 --daemon 2>/dev/null


    if [ "$(docker ps -aq -f status=exited -f name=$NAME)" ]; then
        echo "Starting existing $NAME container..."
        docker start $NAME
        sleep $WAIT
        open http://localhost:$PORT
    else
        echo "Starting new $NAME container..."
        docker run                                    \
            -d                                        \
            --name $NAME                              \
            -e PULSE_SERVER=docker.for.mac.localhost  \
            -v ~/.config/pulse:/nobody/.config/pulse  \
            -p 5901:5901                              \
            -p $PORT:32000                            \
            ivonet/$NAME

        sleep $WAIT
        open http://localhost:$PORT
    fi
else
    echo "Stopping $NAME..."
    docker stop $NAME
    killall pulseaudio 2>/dev/null
fi

EOT

cat <<'EOT' > ${PROJECT_NAME}/run.sh
#!/usr/bin/env bash
NAME=PROJECT_NAAM
PORT=8080
if [ ! -z $1 ]; then
   EP="--entrypoint bash"
fi

killpulse() {
    pulseaudio --kill 2>/dev/null
    killall pulseaudio 2>/dev/null
    rm -rf ~/.config/pulse 2>/dev/null
    mkdir -p ~/.config/pulse 2>/dev/null
}

[[ -z "$(brew ls --versions pulseaudio)" ]] && brew install pulseaudio
killpulse
pulseaudio --load=module-native-protocol-tcp --exit-idle-time=-1 --daemon 2>/dev/null

docker run                                   \
    -it                                      \
    --rm                                     \
    --name $NAME                             \
    -e PULSE_SERVER=docker.for.mac.localhost \
    -v ~/.config/pulse:/nobody/.config/pulse \
    -p 5901:5901                             \
    -p ${PORT}:32000                         \
    $EP                                      \
    ivonet/$NAME

killpulse
EOT

cat <<'EOT' > ${PROJECT_NAME}/VERSION
latest
EOT

cat <<'EOT' > ${PROJECT_NAME}/pre-make.sh
#!/usr/bin/env bash
# Put your pre-make commands here...
EOT


sed -i "" "s~PROJECT_NAAM~${PROJECT}~g" ${PROJECT_NAME}/Dockerfile
sed -i "" "s~PROJECT_NAAM~${PROJECT}~g" ${PROJECT_NAME}/README.md
sed -i "" "s~PROJECT_NAAM~${PROJECT}~g" ${PROJECT_NAME}/build.sh
sed -i "" "s~PROJECT_NAAM~${PROJECT}~g" ${PROJECT_NAME}/pre-make.sh
sed -i "" "s~PROJECT_NAAM~${PROJECT}~g" ${PROJECT_NAME}/${PROJECT}.sh
sed -i "" "s~PROJECT_NAAM~${PROJECT}~g" ${PROJECT_NAME}/run.sh
chmod +x ${PROJECT_NAME}/pre-make.sh
chmod +x ${PROJECT_NAME}/build.sh
chmod +x ${PROJECT_NAME}/${PROJECT}.sh
chmod +x ${PROJECT_NAME}/run.sh

cd ${PROJECT_NAME}
git init
touch README.md
echo ".idea\n*.iml\nnode_modules\n.DS_Store\ntarget\n.tmp\ntmp">> .gitignore
echo ".idea\n*.iml\nnode_modules\n.DS_Store\ntarget\n.tmp\ntmp">> .dockerignore
git add .
git commit -m 'Initialized git repo' --allow-empty

ccd -set ${PROJECT}
